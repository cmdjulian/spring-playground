# syntax = docker/dockerfile:1.4.3

FROM ghcr.io/graalvm/native-image:muslib-ol9-java17-22.3.0 AS compile

RUN microdnf update -y \
 && microdnf install --nodocs -y tar gzip findutils \
 && microdnf clean all \
 && rm -rf /var/cache/yum
WORKDIR /build
ENV GRADLE_OPTS="-Dorg.gradle.project.buildDir=/gradle/build" \
    GRADLE_USER_HOME="/gradle/home" \
    PROJECT_CACHE_DIR="/gradle/project-cache-dir"
RUN --mount=type=cache,target=$GRADLE_USER_HOME --mount=type=cache,target=$PROJECT_CACHE_DIR --mount=source=.,target=. \
    ./gradlew --no-watch-fs --no-daemon --project-cache-dir $PROJECT_CACHE_DIR -Pstatic nativeCompile
RUN strip --strip-all /gradle/build/native/nativeCompile/notes


# compress app with upx
FROM --platform=$BUILDPLATFORM alpine:3.16 AS builder

WORKDIR /build
RUN apk --update-cache add tzdata
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "10001" \
    "notes"
COPY --from=pratikimprowise/upx:3.96 /usr/local/bin/upx /usr/local/bin/upx
COPY --link --from=compile /gradle/build/native/nativeCompile/notes /build/notes
RUN [ "upx", "-9", "--best", "--ultra-brute", "/build/notes" ]

# create image with all required files for squashing in later stage
FROM scratch AS squash

COPY --link --from=alpine:3.16 --chown=10001:10001 --chmod=1777 /tmp /tmp
COPY --link --from=builder /usr/share/zoneinfo/ /usr/share/zoneinfo/
COPY --link --from=builder /etc/hosts /etc/group /etc/passwd /etc/ssl/ /etc/
COPY --link --from=builder --chown=10001:10001 --chmod=600 /tmp /app/database
COPY --link --from=builder --chown=10001:10001 --chmod=500 /build/notes /app/notes


# final image
FROM scratch

ENV TZ=Europe/Berlin SSL_CERT_DIR=/etc/ssl/certs PATH=/app
USER 10001:10001
EXPOSE 8080 8090
WORKDIR /app
ENTRYPOINT ["/app/notes"]
COPY --link --from=squash / /
